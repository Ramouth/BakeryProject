"""Initial tables

Revision ID: 00b20e9d2565
Revises: 
Create Date: 2025-04-09 20:24:43.522996

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '00b20e9d2565'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bakery',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('zip_code', sa.String(length=4), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('bakery', schema=None) as batch_op:
        batch_op.create_index('idx_bakery_name', ['name'], unique=False)
        batch_op.create_index('idx_bakery_zip', ['zip_code'], unique=False)

    op.create_table('contact',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=80), nullable=False),
    sa.Column('last_name', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('contact', schema=None) as batch_op:
        batch_op.create_index('idx_contact_email', ['email'], unique=True)
        batch_op.create_index('idx_contact_name', ['first_name', 'last_name'], unique=False)

    op.create_table('bakery_review',
    sa.Column('bakery_id', sa.Integer(), nullable=False),
    sa.Column('service_rating', sa.Integer(), nullable=False),
    sa.Column('price_rating', sa.Integer(), nullable=False),
    sa.Column('atmosphere_rating', sa.Integer(), nullable=False),
    sa.Column('location_rating', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('review', sa.Text(), nullable=False),
    sa.Column('overall_rating', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('contact_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('atmosphere_rating BETWEEN 1 AND 10', name='check_bakery_atmosphere_rating'),
    sa.CheckConstraint('location_rating BETWEEN 1 AND 10', name='check_bakery_location_rating'),
    sa.CheckConstraint('overall_rating BETWEEN 1 AND 10', name='check_bakery_overall_rating'),
    sa.CheckConstraint('price_rating BETWEEN 1 AND 10', name='check_bakery_price_rating'),
    sa.CheckConstraint('service_rating BETWEEN 1 AND 10', name='check_bakery_service_rating'),
    sa.ForeignKeyConstraint(['bakery_id'], ['bakery.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('bakery_review', schema=None) as batch_op:
        batch_op.create_index('idx_bakery_review_bakery_id', ['bakery_id'], unique=False)
        batch_op.create_index('idx_bakery_review_contact_id', ['contact_id'], unique=False)

    op.create_table('pastry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('bakery_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bakery_id'], ['bakery.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('pastry', schema=None) as batch_op:
        batch_op.create_index('idx_pastry_bakery_id', ['bakery_id'], unique=False)
        batch_op.create_index('idx_pastry_name', ['name'], unique=False)

    op.create_table('pastry_review',
    sa.Column('pastry_id', sa.Integer(), nullable=False),
    sa.Column('taste_rating', sa.Integer(), nullable=False),
    sa.Column('price_rating', sa.Integer(), nullable=False),
    sa.Column('presentation_rating', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('review', sa.Text(), nullable=False),
    sa.Column('overall_rating', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('contact_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('overall_rating BETWEEN 1 AND 10', name='check_pastry_overall_rating'),
    sa.CheckConstraint('presentation_rating BETWEEN 1 AND 10', name='check_pastry_presentation_rating'),
    sa.CheckConstraint('price_rating BETWEEN 1 AND 10', name='check_pastry_price_rating'),
    sa.CheckConstraint('taste_rating BETWEEN 1 AND 10', name='check_pastry_taste_rating'),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['pastry_id'], ['pastry.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('pastry_review', schema=None) as batch_op:
        batch_op.create_index('idx_pastry_review_contact_id', ['contact_id'], unique=False)
        batch_op.create_index('idx_pastry_review_pastry_id', ['pastry_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('pastry_review', schema=None) as batch_op:
        batch_op.drop_index('idx_pastry_review_pastry_id')
        batch_op.drop_index('idx_pastry_review_contact_id')

    op.drop_table('pastry_review')
    with op.batch_alter_table('pastry', schema=None) as batch_op:
        batch_op.drop_index('idx_pastry_name')
        batch_op.drop_index('idx_pastry_bakery_id')

    op.drop_table('pastry')
    with op.batch_alter_table('bakery_review', schema=None) as batch_op:
        batch_op.drop_index('idx_bakery_review_contact_id')
        batch_op.drop_index('idx_bakery_review_bakery_id')

    op.drop_table('bakery_review')
    with op.batch_alter_table('contact', schema=None) as batch_op:
        batch_op.drop_index('idx_contact_name')
        batch_op.drop_index('idx_contact_email')

    op.drop_table('contact')
    with op.batch_alter_table('bakery', schema=None) as batch_op:
        batch_op.drop_index('idx_bakery_zip')
        batch_op.drop_index('idx_bakery_name')

    op.drop_table('bakery')
    # ### end Alembic commands ###
